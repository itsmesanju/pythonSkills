!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
Array	Data Structures - Arrays/Implementing an array.py	/^class Array:$/;"	c
BinarySearchTree	Data Structures - Trees/Binary Search Tree.py	/^class BinarySearchTree:$/;"	c
BinarySearchTree	Traversals/Breadth First Search.py	/^class BinarySearchTree:$/;"	c
BinarySearchTree	Traversals/Depth First Search.py	/^class BinarySearchTree:$/;"	c
CircularLinkedList	Data Structures - Linked Lists/Circular Linked List.py	/^class CircularLinkedList:$/;"	c
DoublyLinkedList	Data Structures - Linked Lists/Doubly Linked List.py	/^class DoublyLinkedList:$/;"	c
Graph	Data Structures - Graph/Graph Implementation.py	/^class Graph:$/;"	c
Hashtable	Data Structures - Hashtables/Hash Table Implementation.py	/^class Hashtable:$/;"	c
LinkedList	Data Structures - Linked Lists/Linked List.py	/^class LinkedList():$/;"	c
Node	Data Structures - Linked Lists/Doubly Linked List.py	/^class Node:$/;"	c
Node	Data Structures - Linked Lists/Linked List.py	/^class Node():$/;"	c
Node	Data Structures - Stacks and Queues/Queue using Linked List.py	/^class Node:$/;"	c
Node	Data Structures - Stacks and Queues/Stacks using Linked List.py	/^class Node:$/;"	c
Node	Data Structures - Trees/Binary Search Tree.py	/^class Node:$/;"	c
Node	Traversals/Breadth First Search.py	/^class Node:$/;"	c
Node	Traversals/Depth First Search.py	/^class Node:$/;"	c
Queue	Data Structures - Stacks and Queues/Queue using Linked List.py	/^class Queue:$/;"	c
Stack	Data Structures - Stacks and Queues/Stacks using Arrays.py	/^class Stack:$/;"	c
Stack	Data Structures - Stacks and Queues/Stacks using Linked List.py	/^class Stack:$/;"	c
_Node	Data Structures - Linked Lists/Circular Linked List.py	/^    class _Node:$/;"	c	class:CircularLinkedList
__init__	Data Structures - Arrays/Implementing an array.py	/^  def __init__(self):$/;"	m	class:Array
__init__	Data Structures - Graph/Graph Implementation.py	/^  def __init__(self):$/;"	m	class:Graph
__init__	Data Structures - Hashtables/Hash Table Implementation.py	/^	def __init__(self):$/;"	m	class:Hashtable
__init__	Data Structures - Linked Lists/Circular Linked List.py	/^        def __init__(self, value, next):$/;"	m	class:CircularLinkedList._Node
__init__	Data Structures - Linked Lists/Circular Linked List.py	/^    def __init__(self):$/;"	m	class:CircularLinkedList
__init__	Data Structures - Linked Lists/Doubly Linked List.py	/^    def __init__(self):$/;"	m	class:DoublyLinkedList
__init__	Data Structures - Linked Lists/Doubly Linked List.py	/^    def __init__(self,data):$/;"	m	class:Node
__init__	Data Structures - Linked Lists/Linked List.py	/^  def __init__(self):$/;"	m	class:LinkedList
__init__	Data Structures - Linked Lists/Linked List.py	/^  def __init__(self,data):$/;"	m	class:Node
__init__	Data Structures - Stacks and Queues/Queue using Linked List.py	/^  def __init__(self):$/;"	m	class:Queue
__init__	Data Structures - Stacks and Queues/Queue using Linked List.py	/^  def __init__(self,val):$/;"	m	class:Node
__init__	Data Structures - Stacks and Queues/Stacks using Arrays.py	/^  def __init__(self):$/;"	m	class:Stack
__init__	Data Structures - Stacks and Queues/Stacks using Linked List.py	/^  def __init__(self):$/;"	m	class:Stack
__init__	Data Structures - Stacks and Queues/Stacks using Linked List.py	/^  def __init__(self,data):$/;"	m	class:Node
__init__	Data Structures - Trees/Binary Search Tree.py	/^  def __init__(self):$/;"	m	class:BinarySearchTree
__init__	Data Structures - Trees/Binary Search Tree.py	/^  def __init__(self,data):$/;"	m	class:Node
__init__	Traversals/Breadth First Search.py	/^  def __init__(self):$/;"	m	class:BinarySearchTree
__init__	Traversals/Breadth First Search.py	/^  def __init__(self,val):$/;"	m	class:Node
__init__	Traversals/Depth First Search.py	/^  def __init__(self):$/;"	m	class:BinarySearchTree
__init__	Traversals/Depth First Search.py	/^  def __init__(self,val):$/;"	m	class:Node
__slots__	Data Structures - Linked Lists/Circular Linked List.py	/^        __slots__ = '_data', '_next'$/;"	v	class:CircularLinkedList._Node
__str__	Data Structures - Arrays/Implementing an array.py	/^  def __str__(self):$/;"	m	class:Array	file:
__str__	Data Structures - Graph/Graph Implementation.py	/^  def __str__(self):$/;"	m	class:Graph	file:
__str__	Data Structures - Hashtables/Hash Table Implementation.py	/^	def __str__(self):$/;"	m	class:Hashtable	file:
__str__	Data Structures - Stacks and Queues/Stacks using Arrays.py	/^  def __str__(self):$/;"	m	class:Stack	file:
a	Data Structures - Arrays/Merge Sorted Arrays.py	/^a=[1,3,4,6,20]$/;"	v
add80	Dynamic Programming/Memoization.py	/^def add80(n):$/;"	f
addEdge	Data Structures - Graph/Graph Implementation.py	/^  def addEdge(self,node1,node2):$/;"	m	class:Graph
addVertex	Data Structures - Graph/Graph Implementation.py	/^  def addVertex(self,node):$/;"	m	class:Graph
add_first	Data Structures - Linked Lists/Circular Linked List.py	/^    def add_first(self, value):$/;"	m	class:CircularLinkedList
add_last	Data Structures - Linked Lists/Circular Linked List.py	/^    def add_last(self, value):$/;"	m	class:CircularLinkedList
add_particular	Data Structures - Linked Lists/Circular Linked List.py	/^    def add_particular(self, value, position):$/;"	m	class:CircularLinkedList
append	Data Structures - Linked Lists/Doubly Linked List.py	/^    def append(self,data):$/;"	m	class:DoublyLinkedList
append	Data Structures - Linked Lists/Linked List.py	/^  def append(self,data):$/;"	m	class:LinkedList
arr	Data Structures - Arrays/Implementing an array.py	/^arr=Array()$/;"	v
arr	Sorting/Bubble sort.py	/^arr = [5,9,1,2,7,3,8,2]$/;"	v
arr	Sorting/Insertion sort.py	/^arr = [6,5,3,1,8,7,2,4]$/;"	v
arr	Sorting/Merge sort.py	/^arr = [99,44,6,2,1,5,63,87,283,4,0]$/;"	v
arr	Sorting/Selection sort.py	/^arr = [8,6,5,0,4,3,2]$/;"	v
b	Data Structures - Arrays/Merge Sorted Arrays.py	/^b=[2,3,4,5,6,9,11,76]$/;"	v
breadthfirstsearch	Traversals/Breadth First Search.py	/^  def breadthfirstsearch(self):$/;"	m	class:BinarySearchTree
bst	Data Structures - Trees/Binary Search Tree.py	/^bst = BinarySearchTree()$/;"	v
bubblesort	Sorting/Bubble sort.py	/^def bubblesort(arr):$/;"	f
cache	Dynamic Programming/Fibonacci - DP.py	/^cache = {}$/;"	v
cache	Dynamic Programming/Memoization.py	/^cache = {}$/;"	v
circ_list	Data Structures - Linked Lists/Circular Linked List.py	/^circ_list = CircularLinkedList()$/;"	v
d	Data Structures - Linked Lists/Doubly Linked List.py	/^d = DoublyLinkedList()$/;"	v
delete	Data Structures - Arrays/Implementing an array.py	/^  def delete(self,index):$/;"	m	class:Array
dequeue	Data Structures - Stacks and Queues/Queue using Linked List.py	/^  def dequeue(self):$/;"	m	class:Queue
enqueue	Data Structures - Stacks and Queues/Queue using Linked List.py	/^  def enqueue(self,val):$/;"	m	class:Queue
fact	Recursion/Factorial.py	/^def fact(num):$/;"	f
factorial	Recursion/Factorial.py	/^def factorial(num):$/;"	f
fib	Dynamic Programming/Fibonacci - DP.py	/^def fib(n):$/;"	f
fib	Recursion/Fibonacci.py	/^def fib(num):$/;"	f
fibo	Dynamic Programming/Fibonacci - DP.py	/^def fibo(n):$/;"	f
fibonacci	Recursion/Fibonacci.py	/^def fibonacci(num):$/;"	f
func	Data Structures - Hashtables/First Recurring Character.py	/^def func(mylist):$/;"	f
get	Data Structures - Arrays/Implementing an array.py	/^  def get(self,index):$/;"	m	class:Array
get	Data Structures - Hashtables/Hash Table Implementation.py	/^	def get(self, key):$/;"	m	class:Hashtable
h	Data Structures - Hashtables/Hash Table Implementation.py	/^h=Hashtable()$/;"	v
hash	Data Structures - Hashtables/Hash Table Implementation.py	/^	def hash(self, key):$/;"	m	class:Hashtable
hashtable	Data Structures - Hashtables/First Recurring Character.py	/^def hashtable(mylist):$/;"	f
inorder	Traversals/Depth First Search.py	/^  def inorder(self,currnode,mylist):$/;"	m	class:BinarySearchTree
insert	Data Structures - Linked Lists/Doubly Linked List.py	/^    def insert(self,index,data):$/;"	m	class:DoublyLinkedList
insert	Data Structures - Linked Lists/Linked List.py	/^  def insert(self,index,data):$/;"	m	class:LinkedList
insert	Data Structures - Trees/Binary Search Tree.py	/^  def insert(self,data):$/;"	m	class:BinarySearchTree
insert	Traversals/Breadth First Search.py	/^  def insert(self,val):$/;"	m	class:BinarySearchTree
insert	Traversals/Depth First Search.py	/^  def insert(self,val):$/;"	m	class:BinarySearchTree
insertionsort	Sorting/Insertion sort.py	/^def insertionsort(arr):$/;"	f
is_empty	Data Structures - Linked Lists/Circular Linked List.py	/^    def is_empty(self):$/;"	m	class:CircularLinkedList
l	Data Structures - Linked Lists/Linked List.py	/^l = LinkedList()$/;"	v
lookup	Data Structures - Trees/Binary Search Tree.py	/^  def lookup(self,data):$/;"	m	class:BinarySearchTree
lookup	Traversals/Breadth First Search.py	/^  def lookup(self,val):$/;"	m	class:BinarySearchTree
lookup	Traversals/Depth First Search.py	/^  def lookup(self,val):$/;"	m	class:BinarySearchTree
memo	Dynamic Programming/Memoization.py	/^memo = memoizedadd80()$/;"	v
memoized	Dynamic Programming/Memoization.py	/^  def memoized(n):$/;"	f	function:memoizedadd80
memoized2add80	Dynamic Programming/Memoization.py	/^def memoized2add80(n):$/;"	f
memoizedadd80	Dynamic Programming/Memoization.py	/^def memoizedadd80():$/;"	f
memoizedadd80	Dynamic Programming/Memoization.py	/^def memoizedadd80(n):$/;"	f
merge	Sorting/Merge sort.py	/^def merge(left,right):$/;"	f
mergesort	Sorting/Merge sort.py	/^def mergesort(arr):$/;"	f
mergesortedarr	Data Structures - Arrays/Merge Sorted Arrays.py	/^def mergesortedarr(a,b):$/;"	f
myGraph	Data Structures - Graph/Graph Implementation.py	/^myGraph = Graph()$/;"	v
mylist	Data Structures - Hashtables/First Recurring Character.py	/^mylist = [2,1,1,2,3,4,5]$/;"	v
myq	Data Structures - Stacks and Queues/Queue using Linked List.py	/^myq = Queue()$/;"	v
mystack	Data Structures - Stacks and Queues/Stacks using Arrays.py	/^mystack = Stack()$/;"	v
mystack	Data Structures - Stacks and Queues/Stacks using Linked List.py	/^mystack = Stack()$/;"	v
numbers	Sorting/Quick sort.py	/^numbers = [99, 44, 6, 2, 1, 5, 63, 87, 283, 4, 0]$/;"	v
partition	Sorting/Quick sort.py	/^def partition(array, pivot, left, right):$/;"	f
peek	Data Structures - Stacks and Queues/Queue using Linked List.py	/^  def peek(self):$/;"	m	class:Queue
peek	Data Structures - Stacks and Queues/Stacks using Arrays.py	/^  def peek(self):$/;"	m	class:Stack
peek	Data Structures - Stacks and Queues/Stacks using Linked List.py	/^  def peek(self):$/;"	m	class:Stack
pop	Data Structures - Arrays/Implementing an array.py	/^  def pop(self):$/;"	m	class:Array
pop	Data Structures - Stacks and Queues/Stacks using Arrays.py	/^  def pop(self):$/;"	m	class:Stack
pop	Data Structures - Stacks and Queues/Stacks using Linked List.py	/^  def pop(self):$/;"	m	class:Stack
postorder	Traversals/Depth First Search.py	/^  def postorder(self,currnode,mylist):$/;"	m	class:BinarySearchTree
preorder	Traversals/Depth First Search.py	/^  def preorder(self,currnode,mylist):$/;"	m	class:BinarySearchTree
prepend	Data Structures - Linked Lists/Doubly Linked List.py	/^    def prepend(self,data):$/;"	m	class:DoublyLinkedList
prepend	Data Structures - Linked Lists/Linked List.py	/^  def prepend(self,data):$/;"	m	class:LinkedList
print_list	Data Structures - Linked Lists/Circular Linked List.py	/^    def print_list(self):$/;"	m	class:CircularLinkedList
print_tree	Data Structures - Trees/Binary Search Tree.py	/^  def print_tree(self):$/;"	m	class:BinarySearchTree
printl	Data Structures - Linked Lists/Linked List.py	/^  def printl(self):$/;"	m	class:LinkedList
printt	Data Structures - Linked Lists/Doubly Linked List.py	/^    def printt(self):$/;"	m	class:DoublyLinkedList
printt	Data Structures - Stacks and Queues/Queue using Linked List.py	/^  def printt(self):$/;"	m	class:Queue
printt	Data Structures - Stacks and Queues/Stacks using Linked List.py	/^  def printt(self):$/;"	m	class:Stack
printt	Data Structures - Trees/Binary Search Tree.py	/^  def printt(self,curr_node):$/;"	m	class:BinarySearchTree
push	Data Structures - Arrays/Implementing an array.py	/^  def push(self,item):$/;"	m	class:Array
push	Data Structures - Stacks and Queues/Stacks using Arrays.py	/^  def push(self,value):$/;"	m	class:Stack
push	Data Structures - Stacks and Queues/Stacks using Linked List.py	/^  def push(self,data):$/;"	m	class:Stack
put	Data Structures - Hashtables/Hash Table Implementation.py	/^	def put(self, key, value):$/;"	m	class:Hashtable
quicksort	Sorting/Quick sort.py	/^def quicksort(array,left,right):$/;"	f
qw	Data Structures - Stacks and Queues/Stacks using Linked List.py	/^qw = mystack.peek()$/;"	v
recursivebfs	Traversals/Breadth First Search.py	/^  def recursivebfs(self,queue,mylist):$/;"	m	class:BinarySearchTree
remove	Data Structures - Hashtables/Hash Table Implementation.py	/^	def remove(self, key):$/;"	m	class:Hashtable
remove	Data Structures - Linked Lists/Doubly Linked List.py	/^    def remove(self,index):$/;"	m	class:DoublyLinkedList
remove	Data Structures - Linked Lists/Linked List.py	/^  def remove(self,index):$/;"	m	class:LinkedList
remove_first	Data Structures - Linked Lists/Circular Linked List.py	/^    def remove_first(self):$/;"	m	class:CircularLinkedList
remove_last	Data Structures - Linked Lists/Circular Linked List.py	/^    def remove_last(self):$/;"	m	class:CircularLinkedList
remove_particular	Data Structures - Linked Lists/Circular Linked List.py	/^    def remove_particular(self, position):$/;"	m	class:CircularLinkedList
reverse	Data Structures - Arrays/Reversing a string.py	/^def reverse(stri):$/;"	f
reverse	Data Structures - Linked Lists/Linked List.py	/^  def reverse(self):$/;"	m	class:LinkedList
reverse	Recursion/Reversing a string using Recursion.py	/^def reverse(word):$/;"	f
selectionsort	Sorting/Selection sort.py	/^def selectionsort(arr):$/;"	f
showconnection	Data Structures - Graph/Graph Implementation.py	/^  def showconnection(self):$/;"	m	class:Graph
strings	Data Structures - Arrays/Arrays.py	/^strings = ['a','b','c','d']$/;"	v
swap	Sorting/Quick sort.py	/^def swap(array, firstindex, secondindex):$/;"	f
traversetoindex	Data Structures - Linked Lists/Doubly Linked List.py	/^    def traversetoindex(self,index):$/;"	m	class:DoublyLinkedList
tree	Traversals/Breadth First Search.py	/^tree = BinarySearchTree()$/;"	v
tree	Traversals/Depth First Search.py	/^tree = BinarySearchTree()$/;"	v
x	Data Structures - Arrays/Merge Sorted Arrays.py	/^x=mergesortedarr(a,b)$/;"	v
x	Data Structures - Arrays/Reversing a string.py	/^x=reverse('I am theja')$/;"	v
x	Data Structures - Hashtables/First Recurring Character.py	/^x = hashtable(mylist)$/;"	v
x	Data Structures - Stacks and Queues/Queue using Linked List.py	/^x = myq.peek()$/;"	v
x	Data Structures - Stacks and Queues/Stacks using Arrays.py	/^x = mystack.peek()$/;"	v
x	Data Structures - Stacks and Queues/Stacks using Linked List.py	/^x = mystack.peek()$/;"	v
x	Data Structures - Trees/Binary Search Tree.py	/^x = bst.lookup(6)$/;"	v
x	Data Structures - Trees/Heapq in python.py	/^x = [5,2,8,1,6,7,4,9]$/;"	v
x	Dynamic Programming/Fibonacci - DP.py	/^x = fibo(8)$/;"	v
x	Sorting/Merge sort.py	/^x = mergesort(arr)$/;"	v
x	Traversals/Breadth First Search.py	/^x = tree.lookup(170)$/;"	v
y	Data Structures - Stacks and Queues/Stacks using Linked List.py	/^y=mystack.pop()$/;"	v
y	Data Structures - Trees/Binary Search Tree.py	/^y = bst.lookup(99)$/;"	v
